library(readxl)
read.csv("Envios.xls")
read.csv("Envios")
library(readxl)
Envios <- read_excel("C:/Users/EDWARICHSNAKE/Desktop/Estadistica/Envios.xls")
View(Envios)
View(Envios)
envio = read_excel("Envios.xls")
data$Real
Envios$Real
Envios$Scheduled
Envios$Type
plot(Envios$Type,Envios$Real)
tiempo = Envios$Real
dias = Envios$Scheduled
tipo = Envios$Type
status = Envios$Status
min(dias)
max(dias)
plot(dias, tiempo)
table(dias == 4, tiempo)
table(dias, tiempo)
table(dias <= 2,status)
sum(dias<=2)
203/4
factorial(dias<=2)/factorial(dias - 1)
sum(factorial(dias<=2)/factorial(dias - 1))
sum(sum(dias<=2)/factorial(dias - 1))
table(dias <= 2,status)
table(dias,status<=2)
table(status<=2, dias)
table(tiempo<=2, dias)
sum(tiempo<=2)
sum(dias<=2)
sum(dias<=2, tiempo)
2106/6
table(dias == 4, tiempo)
2106/500
500/2106
table(status == "Shipping on time", tipo == "Debit")
table(status, tipo)
table(status == "Shipping on time", tipo == "Debit")
sum(status=="Shipping on time")
30/factorial(sum(status=="Shipping on time")-1)
30/(factorial(sum(status=="Shipping on time")-1))
fatorial(30)/(factorial(sum(status=="Shipping on time")-1))
factorial(30)/(factorial(sum(status=="Shipping on time")-1))
factorial(30)/(factorial(92-30))
n=500
factorial(sum(status == "Shipping on time"))
factorial(sum(status == "Shipping on time"))/(499-1)
plot(dias, status)
plot(dias, tiempo)
plot(dias, status)
plot(dias, tiempo)
min(status)
max(status)
plot?
?plot
sum(status=="Shipping on time")
factorial(499)/factorial(499 - 92)
factorial(499)/(factorial(92) * factorial(499 - 92))
factorial(499)
table(status == "Shipping on time", tipo == "Debit")
table(status, tipo)
factorial(92)/factorial(92-30)
factorial(30)/factorial(92-30)
factorial(30)/factorial(30-92)
factorial(92)/factorial(92-30)
factorial(190)/factorial(190-30)
factorial(92)/factorial(92)
factorial(92)/factorial(92-30)
30/92
table(tiempo<=2, dias)
sum(dias<=2, tiempo)
table(tiempo, dias)
3/2106
sum(y*fx)
#PARACTICA DE V.A DESCRETA
#
#
x = c (0, 1, 2, 3, 4, 5)
fx = c(0.1, 0.15, 0.2, 0.17,0.18, 0.20)
#verificar condicion fx
sum(fx)
#grafico de f(x)
plot(x, fx, type="h")
#A partor de fx se puede ontener su comportamiento probabilidtico
#cual es la probabilidad que en la proxima hora suceda:
# 1. un solo fallo p(x=1)
fx[2]
# 2. entre dos a 4 fallos p(x=2 o x=3 o x=4)
fx[3]+fx[4]+fx[5]
# 3. No mas ed 3 fallos: (x=0, x=1, x=2)
fx[1] + fx[2] + fx[3]
# 4. No se presenten 5 fallos
1 - fx[6]
# Calcular la esperazna matemÃ¡tica
em = sum(x*fx)
abline(v = em, col =2)
#lo mas probable es que en una hora determinada existan entre 2 y 3 fallas
#si por cada falla el costo de perdida de conexion es de 2 usd
#y el costo de reconexion es de 50 usd por gora calcule el costo medio total por las fallas
y = 2*x+50
sum(y*fx) #usando definicion de la em
2*em + 50 #usando propiedades de la em
#todos positivos, suma uno
plot(x, fx, type="h",ylim = c{0,max(fx)})
plot(x, fx, type="h",ylim = c(0,max(fx)))
sigma2= sum((x-en)^2 * fx)
sigma2= sum((x-em)^2 * fx)
sigma2
EX2 = sum(x^2 * fx)
EX2
sigma = sqrt(sigma2)
sigma
fdp = function(x){
3/16(3-x^2)
}
curve(fdp, -1, 1)
fdp = function(x){
(3/16)*(3-x^2)
}
curve(fdp, -1, 1)
?integrate
integrate(fdp,1,-1)
cls
clear
integrate(fdp,-1,1)$value
prob = integrate(fdp,-1,1/2)
prob
prob = integrate(fdp,-1,1/2)$value
prob
prob2 = 1 - integrate(fdp,-1,1/2)$value
prob2
prob2 = 1 - integrate(fdp,-0.8,0.8)$value
prob2
x.fdp = function(x){
(3/16)*(3-x^2)
}
mu = integrate(x.fdp, -1,1)$value
sigma2 = integrate(sigma.fdp, -1,1)$value
sigma.fdp = function(x) {
(x-mu)^2 * 3/16 * (3-x^2)
}
sigma2 = integrate(sigma.fdp, -1,1)$value
sigma2
x2.fdp = function(x){
(x)^2 * 3/16 / (3-x^2)
}
EX2 = integrate(x2.fdp,-1,1)
EX2
EX2 = integrate(x2.fdp,-1,1)&value
EX2 = integrate(x2.fdp,-1,1)$value
EX2
x2.fdp = function(x){
(x)^2 * 3/16 * (3-x^2)
}
EX2 = integrate(x2.fdp,-1,1)$value
EX2
Fx = function(x){
3/16 * (((-x)^3)/3 + 3*x -8/3)
}
Fx(1/2)
Fx = function(x){
3/16 ((((-x)^3)/3 + 3*x -8/3))
}
Fx(1/2)
Fx = function(x){
3/16 * ((((-x)^3)/3 + 3*x -8/3))
}
Fx(1/2)
Fx = function(x){
3/16 * ((-x)^3)/3 + 3*x -8/3
}
Fx(1/2)
Fx = function(x){
3/16 * ((-x)^3/3 + 3*x + 8/3)
}
Fx(1/2)
Fx(0.8) - Fx(0.8)
1 - (Fx(0.8) - Fx(0.8))
Fx(0.8) - Fx(-0.8)
1 - (Fx(0.8) - Fx(-0.8))
